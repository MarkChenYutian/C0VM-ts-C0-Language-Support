# Single-line @requires

int main()
//@requires true;
{
    return 0;
}

==>

Program(
    Function(
        Type, Identifier, CommaSep(),
        Contract(
            ContractLine, Keyword(requires), RightValue(Boolean)
        ),
        Scope(
            Expression(Keyword(return), RightValue(Number))
        )
    )
)

# Multi-line @requires

int main()
/*@requires true;@*/
{
    return 0;
}

==>

Program(
    Function(
        Type, Identifier, CommaSep(),
        Contract(
            ContractBlock, Keyword(requires), RightValue(Boolean), ContractBlock
        ),
        Scope(
            Expression(Keyword(return), RightValue(Number))
        )
    )
)

# Multiple @requires

int main()
//@requires true;
//@requires false;
{
    return 0;
}

==>

Program(
    Function(
        Type, Identifier, CommaSep(),
        Contract(
            ContractLine, Keyword(requires), RightValue(Boolean)
        ),
        Contract(
            ContractLine, Keyword(requires), RightValue(Boolean)
        ),
        Scope(
            Expression(Keyword(return), RightValue(Number))
        )
    )
)

# @ensures contract

int main()
//@requires true;
//@ensures true;
{
    return 0;
}

==>

Program(
    Function(
        Type, Identifier, CommaSep(),
        Contract(
            ContractLine, Keyword(requires), RightValue(Boolean)
        ),
        Contract(
            ContractLine, Keyword(ensures), RightValue(Boolean)
        ),
        Scope(
            Expression(Keyword(return), RightValue(Number))
        )
    )
)

# @assert contract in loop body

int main() {
    //@assert true;
    return 0;
}

==>

Program(
    Function(
        Type, Identifier, CommaSep(),
        Scope(
            Expression(
                Contract(ContractLine, Keyword(assert), RightValue(Boolean))
            ),
            Expression(Keyword(return), RightValue(Number))
        )
    )
)
